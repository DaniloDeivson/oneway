events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logs para debug - IMPORTANTE para diagnóstico
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Headers para compatibilidade com Traefik e mobile
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuração específica para mobile User-Agents
        set $mobile_request 0;
        if ($http_user_agent ~* "(Mobile|Android|iPhone|iPad|BlackBerry|Windows Phone|webOS|Opera Mini|IEMobile)") {
            set $mobile_request 1;
        }
        
        # Adicionar headers específicos para mobile
        add_header X-Mobile-Detected $mobile_request always;
        add_header X-UA-Compatible "IE=edge" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;

        # Rotas de debug para diagnóstico
        location = /debug-mobile {
            add_header Content-Type "application/json" always;
            add_header Cache-Control "no-cache" always;
            return 200 '{"status":"ok","user_agent":"$http_user_agent","host":"$host","forwarded":"$http_x_forwarded_for","real_ip":"$http_x_real_ip","mobile":"$mobile_request"}';
        }

        location = /health {
            add_header Content-Type "text/plain" always;
            return 200 'OK';
        }

        # Configuração principal - SEMPRE redirecionar para index.html se não for arquivo
        location / {
            try_files $uri $uri/ @fallback;
        }

        # Fallback para React Router - FORÇA redirecionamento com headers específicos
        location @fallback {
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header X-Mobile-Request $mobile_request always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Content-Type "text/html; charset=utf-8" always;
            try_files /index.html =404;
        }

        # Rota específica para teste de mobile
        location = /mobile-test {
            add_header Content-Type "text/html" always;
            add_header Cache-Control "no-cache" always;
            add_header X-Mobile-Request $mobile_request always;
            try_files /mobile-test.html /index.html =404;
        }

        # Assets estáticos - servir diretamente com headers mobile
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map|json)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Mobile-Request $mobile_request always;
            add_header Vary "User-Agent" always;
            try_files $uri =404;
        }

        # Configuração específica para favicon
        location = /favicon.ico {
            try_files $uri /favicon.ico /vite.svg =404;
            expires 1d;
            add_header X-Mobile-Request $mobile_request always;
            add_header Cache-Control "public, max-age=86400" always;
        }
        
        # Configuração para apple-touch-icon
        location = /apple-touch-icon.png {
            try_files $uri /apple-touch-icon.png /vite.svg =404;
            expires 1d;
            add_header X-Mobile-Request $mobile_request always;
            add_header Cache-Control "public, max-age=86400" always;
        }

        # Rotas específicas do React Router - FORÇA index.html com headers específicos
        location ~ ^/(login|dashboard|admin|fleet|contracts|maintenance|finance|inventory|suppliers|statistics|employees|fines|costs|notas|cobranca|inspections|purchase-orders) {
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header X-Mobile-Request $mobile_request always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Content-Type "text/html; charset=utf-8" always;
            add_header Vary "User-Agent" always;
            try_files /index.html =404;
        }

        # Error pages - redirecionar para index.html
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;

        # Security headers com compatibilidade mobile
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-UA-Compatible "IE=edge" always;
        add_header Vary "User-Agent" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
    }
}